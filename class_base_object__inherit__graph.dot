digraph "BaseObject"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="BaseObject",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="Material",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_material.html",tooltip="Contains parameters that describe a material properties. Its usually bound to a Mesh for rendering."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="Mesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mesh.html",tooltip="Mesh base class, contains the mesh data"];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="MeshDrawer",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mesh_drawer.html",tooltip="Mesh drawer class contains the neccesary buffers to draw the associated mesh data"];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="FullscreenQuad",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_fullscreen_quad.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="RawTexture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_raw_texture.html",tooltip=" "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="Texture2D",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_texture2_d.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Scene",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_scene.html",tooltip="Represents a scene composed of many cameras, meshes, lights, textures and materials...."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Transform",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_transform.html",tooltip="Handles all transformation operations such as scaling, rotating and translating"];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="SceneObject",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_scene_object.html",tooltip="Use for objects that residen within a scene"];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Camera",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_camera.html",tooltip="Holds parameters and settings for scene cameras. Viewing parameters and projection setup for the came..."];
  Node10 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Light",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_light.html",tooltip="Holds the parameters that describe a scene light source. Supports for three different types of light ..."];
  Node10 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Node",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_node.html",tooltip="Describes a node in scene. A node can contain an undefined number of meshes and subnodes."];
}
